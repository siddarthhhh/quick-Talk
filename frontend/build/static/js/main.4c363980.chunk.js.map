{"version":3,"sources":["pages/HomePage.js","pages/ChatPage.js","App.js","index.js"],"names":["Homepage","history","useHistory","useEffect","JSON","parse","localStorage","getItem","push","_jsxs","Container","maxW","centerContent","children","_jsx","Box","display","justifyContent","p","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","variant","TabList","mb","TabPanels","TabPanel","ChatPage","chats","setChats","useState","async","data","axios","get","error","console","fetchChats","length","map","chat","chatName","_id","App","className","Route","path","component","HomePage","exact","ReactDOM","render","React","StrictMode","BrowserRouter","ChakraProvider","Button","colorScheme","document","getElementById"],"mappings":"sMA6DeA,MA9Cf,WACE,MAAMC,EAAUC,cAOhB,OALAC,oBAAU,KACKC,KAAKC,MAAMC,aAAaC,QAAQ,cACnCN,EAAQO,KAAK,WACtB,CAACP,IAGFQ,eAACC,IAAS,CAACC,KAAK,KAAKC,eAAa,EAAAC,SAAA,CAChCC,cAACC,IAAG,CACFC,QAAQ,OACRC,eAAe,SACfC,EAAG,EACHC,GAAG,QACHC,EAAE,OACFC,EAAE,gBACFC,aAAa,KACbC,YAAY,MAAKV,SAEjBC,cAACU,IAAI,CAACC,SAAS,MAAMC,WAAW,YAAWb,SAAC,kBAK9CC,cAACC,IAAG,CAACI,GAAG,QAAQC,EAAE,OAAOF,EAAG,EAAGI,aAAa,KAAKC,YAAY,MAAKV,SAChEJ,eAACkB,IAAI,CAACC,UAAQ,EAACC,QAAQ,eAAchB,SAAA,CACnCC,cAACgB,IAAO,CAACC,GAAG,QAKZtB,eAACuB,IAAS,CAAAnB,SAAA,CACRC,cAACmB,IAAQ,IAGTnB,cAACmB,IAAQ,cAQrB,E,iBCvBeC,MAjCEA,KAEf,MAAOC,EAAOC,GAAYC,mBAAS,IAiBnC,OAJAlC,oBAAU,KAVSmC,WACjB,IACE,MAAM,KAAEC,SAAeC,IAAMC,IAAI,UACjCL,EAASG,EACX,CAAE,MAAOG,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,GAKAE,IACC,IAGDnC,eAAA,OAAAI,SAAA,CACEC,cAAA,MAAAD,SAAI,cACgB,IAAjBsB,EAAMU,OACP/B,cAAA,KAAAD,SAAG,uBAEHsB,EAAMW,IAAIC,GACRjC,cAAA,OAAAD,SAAqBkC,EAAKC,UAAhBD,EAAKE,UCbVC,MAXf,WACE,OACIzC,eAAA,OAAK0C,UAAU,MAAKtC,SAAA,CAChBC,cAACsC,IAAK,CAACC,KAAK,IAAIC,UAAWC,EAAUC,OAAK,IAC1C1C,cAACsC,IAAK,CAACC,KAAK,SAASC,UAAWpB,MAK1C,E,iCCLAuB,IAASC,OACP5C,cAAC6C,IAAMC,WAAU,CAAA/C,SAGfC,cAAC+C,IAAa,CAAAhD,SAEZJ,eAACqD,IAAc,CAAAjD,SAAA,CACfC,cAACiD,IAAM,CAACC,YAAY,OAAMnD,SAAC,gBACvBC,cAACoC,EAAG,WAMZe,SAASC,eAAe,Q","file":"static/js/main.4c363980.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  // Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\"; // v5\r\n// import Login from \"../components/Authentication/Login\";\r\n// import Signup from \"../components/Authentication/Signup\";\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work Sans\">\r\n          Talk-A-Tive\r\n        </Text>\r\n      </Box>\r\n\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs isFitted variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            {/* <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab> */}\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              {/* <Login /> */}\r\n            </TabPanel>\r\n            <TabPanel>\r\n              {/* <Signup /> */}\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatPage = () => {\r\n  // 1. Declare state at the top level of the component\r\n  const [chats, setChats] = useState([]);\r\n\r\n  // 2. Fetch data in a function\r\n  const fetchChats = async () => {\r\n    try {\r\n      const { data } = await axios.get('/chats');\r\n      setChats(data); // update state\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    }\r\n  };\r\n\r\n  // 3. useEffect to call fetchChats once on mount\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat Page</h1>\r\n        {chats.length === 0 ? (\r\n        <p>No chats found bro</p>\r\n      ) : (\r\n        chats.map(chat => (\r\n          <div key={chat._id}>{chat.chatName}</div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n\r\n","\r\nimport {Route} from 'react-router-dom'\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ChatPage from './pages/ChatPage';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <Route path='/' component={HomePage} exact/>\r\n          <Route path='/chats' component={ChatPage}/>\r\n\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\nimport { ChakraProvider, Button } from \"@chakra-ui/react\";\r\nimport {BrowserRouter} from \"react-router-dom\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n\r\n    <BrowserRouter>\r\n\r\n      <ChakraProvider>\r\n      <Button colorScheme=\"teal\">Test Chakra</Button>\r\n          <App /> \r\n      </ChakraProvider>\r\n\r\n    </BrowserRouter>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}